# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
/lib/
/lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.env.local
.env.production
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, uncomment the next line!
#.idea/

# VS Code
.vscode/

# Docker
.dockerignore

# Database
*.db
*.sqlite
*.sqlite3

# Logs
logs/
*.log

# Test reports
test-results/
test_results/
htmlcov/
.coverage
coverage.xml
*.cover

# Environment files (keep .env.example)
.env.dev
.env.prod
.env.test

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Claude Code specific
.claude/

# Temporary files
*.tmp
*.temp
*.swp
*.swo
*~

# IDE files
*.idea
*.vscode
*.sublime-project
*.sublime-workspace

# Data directories
data/
uploads/
downloads/

# Redis dumps
dump.rdb
appendonly.aof

# Frontend specific (Node.js/Next.js)
frontend/node_modules/
frontend/.next/**
frontend/.next/
frontend/.vercel/
frontend/out/
frontend/build/
frontend/dist/
frontend/.env
frontend/.env.local
frontend/.env.development.local
frontend/.env.test.local
frontend/.env.production.local
frontend/npm-debug.log*
frontend/yarn-debug.log*
frontend/yarn-error.log*
frontend/.pnpm-debug.log*
frontend/.turbo/
frontend/coverage/
frontend/.nyc_output/
frontend/next-env.d.ts
frontend/.cache/
frontend/public/sw.js
frontend/public/workbox-*.js
frontend/public/worker-*.js
frontend/public/sw.js.map
frontend/public/workbox-*.js.map
frontend/public/worker-*.js.map

# Backend specific (Python/FastAPI)
backend/__pycache__/
backend/*.py[cod]
backend/*$py.class
backend/.pytest_cache/
backend/.coverage
backend/htmlcov/
backend/coverage.xml
backend/.tox/
backend/.mypy_cache/
backend/.dmypy.json
backend/dmypy.json
backend/instance/
backend/.webassets-cache
backend/.venv/
backend/venv/
backend/ENV/
backend/env/
backend/.env
backend/.env.local
backend/.env.production
backend/alembic/versions/*.py
backend/uploads/
backend/logs/

# Database files
*.db
*.sqlite
*.sqlite3
postgresql_data/
mysql_data/

# Docker
docker-compose.override.yml
.dockerignore

# Global Node.js
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# Package-lock files (keep one, ignore others based on preference)
# Uncomment the ones you want to ignore:
# package-lock.json
# yarn.lock
# pnpm-lock.yaml